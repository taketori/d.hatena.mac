// d.hatena.mac.js.sample
// copyright (C) taketori <taketori at x10d.jp>
// ライセンスはBSDです。

// Hatena Accounts and Passwords
var usrpw : Object = {
	// ここにずらずらとアカウント名とパスワードを書き連ねる。行の最後に , を忘れずに。
	"user1" : "password1", 
	"user2" : "password2",
	"user3" : "12345"
};

import System;
import System.IO;
import System.Text;
import System.Security.Cryptography;
import System.Windows.Forms;

function utcdatetime() {
				var d = new Date();
				return d.getUTCFullYear() +"-"+ (d.getUTCMonth() + 1) +"-"+ d.getUTCDate()
								+"T"+ d.getUTCHours() +":"+ d.getUTCMinutes() +":"+ d.getUTCSeconds() +"Z";
}

function b64_sha1(source) {
	var hash = new SHA1Managed().ComputeHash(Encoding.UTF8.GetBytes(source));
	return Convert.ToBase64String(hash);
}

var args = Environment.GetCommandLineArgs().slice(1);
if(args.length){
	// 設定されていないユーザ名の時。終了コード1で終了する。
	if(usrpw[args[0]] == undefined)	Environment.Exit(1);

	// X-WSSEのデータを生成する。
	var PasswordDigest, Nonce, nonceEncoded, Created;
	Nonce = b64_sha1(utcdatetime() + Math.round(Math.random() * 100) + "x10d-d.hatena.mac");
	nonceEncoded = Convert.ToBase64String(Encoding.UTF8.GetBytes(Nonce));
	Created = utcdatetime();
	PasswordDigest = b64_sha1(Nonce + Created + usrpw[args[0]]);

	print('x-wsse = UsernameToken Username="' + args[0] + '", PasswordDigest="' + PasswordDigest + '", Created="' + Created + '", Nonce="' + nonceEncoded + '"');
}else{
	// 元のスクリプトファイルとの新旧を比較して、その結果を終了コードにして終了する。1=実行ファイルの方が新しい
	var exe = Application.ExecutablePath;
	var js  = exe.substr(0, exe.lastIndexOf(".exe")) + ".js";
	if(File.Exists(js) && File.GetLastWriteTime(js) <= File.GetLastWriteTime(exe)){
		print("実行ファイルは古くありません。");
		Environment.Exit(1);
	}
}
