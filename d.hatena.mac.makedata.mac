// d.hatena.mac.makedata.mac

INIT:

	if(argcount != 2)	endmacro "引数が不正です。";
	$mn = getarg(0);			// マクロの名前
	$$cmfn = getarg(1);		// メインマクロのフルパス

MAIN:

	call make_data $$cmfn;
	title $mn + "データの取得を完了しました。";

endmacro str(##return);

make_data:
// 編集中の秀丸から必要なデータを抽出し、投稿用のデータにする。
//arg: $メインマクロのフルパス
//ret: #取得したDOMDocumentオブジェクトの番号

	disabledraw;
	if(selecting || rectselecting){
		escape;
		moveto2 seltopcolumn, seltoplineno;
		##tc = seltopcolumn; ##tl = seltoplineno;
		##ec = selendcolumn; ##el = selendlineno;
	}else{
		gofileend;
		##tl = 1;
		##ec = column; ##el = lineno;
	}

	call load_dll;		// 失敗したらマクロ終了なので##returnには必ず値が入る。
	##dll = ##return;
	call get_dom 0, $$1 + ".xml";		// 失敗したらマクロ終了なので##returnには必ず値が入る。
	##dom = ##return;

	// 1行ごとに文章を取得して、そのデータを元に(それっぽかったら)ヘッダにする。
	title $mn + "データを解析しています。";
	##i = 1;
	call set_headers ##dll, ##dom, gettext2(##tc, ##tl, (##tl == ##el) * ##ec, ##tl + (##tl != ##el));
	while(##return == 0 && ##tl + ##i < ##el){
		call set_headers ##dll, ##dom, gettext2(0, ##tl + ##i, 0, ##tl + ##i + 1);
		##i = ##i + 1;
	}

	##i = ##i - 1;
	setpropstr member(##dom, "selectSingleNode", "//title"), "text",
	                  gettext2(0, ##tl + ##i,
	                           (##tl + ##i == ##el) * ##ec, ##tl + ##i + (##tl + ##i != ##el));
	setpropstr member(##dom, "selectSingleNode", "//content"), "text",
	                  gettext2(0, ##tl + ##i + 1, ##ec, ##el);
	enabledraw;

return ##dom;

load_dll:
//ret: DLLの識別値

	// hmjre.dllをロードする。
	$$hmjre = hidemarudir + "\\hmjre.dll";
	##hmjre_ver = 0x304;		// [a-zA-Z\d]という形式(キャラクタクラスの中でPerl互換の各種指定)を使うから、3.04以上。
	$$dll = loaddllfile;
	if(rightstr($$dll, 9) == "hmjre.dll"){
		// 多少もたついてでも再読込する。DLL関係の文と関数が混在すると面倒くさいので。
		freedll;
		##dll = loaddll($$dll);
	}else{
		##dll = loaddll($$hmjre);
	}
	if(!##dll)	endmacro $$hmjre + "のロードに失敗しました。";
	if(dllfunc(##dll, "JreGetVersion") & 0xFFFF < ##hmjre_ver)	endmacro $$hmjre + "のバージョンが古すぎます。";

return ##dll;

get_dom:
// DOMオブジェクトの確保。
//arg: #1:XMLHTTPオブジェクトの番号(0=$2をファイル名と見なしその内容を用いる), $2:接続ドメイン(#1=0以外) / 開くファイルのフルパス(#1=0)
//ARG: $mn
//ret: # "Msxml2.DOMDocument.3.0"オブジェクトの番号。エラーの時はマクロ終了。

	title $mn + "XMLを解析しています : " + $$2;
	##dom = createobject("Msxml2.DOMDocument.3.0");
	if(!result)	endmacro "Msxml2.DOMDocument.3.0が使えない環境のため、続行できません。";
	setpropnum ##dom, "async", 0;

	// XML解析
	if(##1){
		//NOTE: 「member(member(##1,"responseXML"),"xml")」ではGET ID/atom/blogの時解析に失敗する。また「member(##1,"responseXML")」では##domに対してプロパティ・メソッドが発行できない。
		callmethod ##dom, "loadXML", getpropstr(##1, "responseText");
	}else{
		callmethod ##dom, "load", $$2;
	}
	if(member(member(##dom, "parseError"), "errorCode") != 0){
		$$msg = $$2 + " から取得したXMLファイルの解析に失敗しました:\n" + member(member(##dom, "parseError"), "reason");
		endmacro $$msg;
	}
	title $mn + "XMLの解析を完了しました。: " + $$2;

return ##dom;

set_headers:
// 正規表現にヒットする第1引数を、ヘッダとしてDOMにセットする。
// NOTE: はてなid = アルファベットで始まり、アルファベットか数字で終わる3文字以上32文字以内の半角英数字。(see: www.hatena.ne.jp/help/account)(ハイフン、アンダーバーも可能らしい。大文字小文字を区別するらしい。)
//arg: #1:hmjre.dllの識別値, #2:DOMDocumentオブジェクトの番号, $3:検索対象文字列
//ret: 0=ヘッダとして設定した。0以外=正規表現で検索にヒットしなかった。

	// 各種データを表す正規表現を設定する。
	$$hateda = "http://d.hatena.ne.jp/";
	$$id_reg = "[a-zA-Z][\\c-]{1,29}[a-zA-Z\\d]";
	$$regex =  "(?:(?:(?:^(date|updated?):[ \\t]*)"                   //#1 ヘッダ
	                  + "(\\d[\\d/-]+\\dT\\d[\\d:]+\\d|\\d[\\d/-]*\\s*\\d[\\d:]*))"  //#2 日付
	           + "|(?:^(draft|blog):[ \\t]*"                          //#3 ヘッダ
	               + "(?:(?:(\\Q" + $$hateda + "\\E)"                 //#4 サーバ
	                     + "(" + $$id_reg + ")"                       //#5 ID
	                     + "(/atom/(blog|draft)(/\\d{8}/\\d{10})?))"  //#6 日時と日記番号
	               +   "|(" + $$id_reg + "))))";                      //#7 ID

	// 条件に合うデータを取得する。
	##pos = dllfunc(##1, "FindRegular", $$regex, $$3, 0);
	if(##pos < 0)	return 1;
	if(0 < dllfunc(##1, "GetLastMatchTagLength", 1)){		// 日付
		// updatedノードのテキストに、日付らしき部分を代入する。
		//TODO: 解析を実行ファイルで。
		setpropstr member(##2, "selectSingleNode", "//updated"), "text",
		           midstr($$3, dllfunc(##1, "GetLastMatchTagPosition", 2),
		                  dllfunc(##1, "GetLastMatchTagLength", 2));

	}else{		// if(0 < dllfunc(##1, "GetLastMatchTagLength", 3)){		// draft/blog
		$$header = midstr($$3, dllfunc(##1, "GetLastMatchTagPosition", 3),
		                  dllfunc(##1, "GetLastMatchTagLength", 3));
		if($$header == "blog"){
			setpropnum member(##2, "selectSingleNode", "//publish"), "text", 1;
		}
		$$user = midstr($$3, dllfunc(##1, "GetLastMatchTagPosition", 5),
		                dllfunc(##1, "GetLastMatchTagLength", 5))
		       + midstr($$3, dllfunc(##1, "GetLastMatchTagPosition", 7),
		                dllfunc(##1, "GetLastMatchTagLength", 7));
		setpropstr member(##2, "selectSingleNode", "//user"), "text", $$user;
		call make_uri $$header, $$user,
		              midstr($$3, dllfunc(##1, "GetLastMatchTagPosition", 6),
		                     dllfunc(##1, "GetLastMatchTagLength", 6));
		setpropstr member(##2, "selectSingleNode", "//uri"), "text", $$return;
	}

return 0;

make_uri:
//arg: $1:ヘッダ, $2:ID, $3:日時と日記番号
//ret:

	$$hateda = "http://d.hatena.ne.jp/";
	$$id = $$2;
	if($$id == ""){
		$$id = input("IDを入力してね。");
	}
	$$entry = $$3;
	if($$entry == ""){
		$$entry = "/atom/" + $$1;
	}

return $$hateda + $$id + $$entry;

